{{- range .Values.rasa.versions }}
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "{{ $.Release.Name }}-{{ .serviceName }}"
  labels:
    {{- include "rasa-x.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ .serviceName }}
spec:
  progressDeadlineSeconds: {{ $.Values.global.progressDeadlineSeconds }}
  replicas: {{ default 1 .replicaCount }}
  selector:
    matchLabels:
      {{- include "rasa-x.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ .serviceName }}
  template:
    metadata:
      labels:
        {{- include "rasa-x.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ .serviceName }}
      annotations:
        checksum/rasa:
          {{- include "rasa.checksum" $ | nindent 10 }}
    spec:
      {{ include "rasa-x.spec" $ }}
      {{- if $.Values.rasa.nodeSelector }}
      nodeSelector:
{{ toYaml $.Values.rasa.nodeSelector | indent 8 }}
      {{- end }}
      {{- if $.Values.rasa.tolerations }}
      tolerations:
{{ toYaml $.Values.rasa.tolerations | indent 6 }}
      {{- end }}
      {{- include "initContainer.dbMigration" $ |  nindent 6 }}
      containers:
      - name: {{ $.Chart.Name }}
        image: "{{ $.Values.rasa.name }}:{{ $.Values.rasa.tag }}"
        imagePullPolicy: {{ $.Values.images.pullPolicy }}
        ports:
        - name: "http"
          containerPort: {{ default 5005 $.Values.rasa.port }}
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/"
            port: "http"
          initialDelaySeconds: {{ $.Values.rasa.initialProbeDelay }}
          failureThreshold: 10
        {{- if $.Values.rasa.command }}
        command:
          {{- toYaml $.Values.rasa.command | nindent 10 }}
        {{- end }}
        {{- if $.Values.rasa.args }}
        args:
          {{- toYaml $.Values.rasa.args | nindent 10 }}
        {{- else }}
        args:
        - x
        - --no-prompt
        - --production
        - --config-endpoint
        - "http://{{ include "rasa-x.fullname" $ }}-rasa-x:{{ default 5002 $.Values.rasax.port }}/api/config?token=$(RASA_X_TOKEN)"
        - --port
        - "{{ $.Values.rasa.port }}"
        - --jwt-method
        - HS256
        - --jwt-secret
        - "$(JWT_SECRET)"
        - --auth-token
        - "$(RASA_TOKEN)"
        - --cors
        - '*'
        {{- if $.Values.rasa.extraArgs }}
        {{- toYaml $.Values.rasa.extraArgs | nindent 8 }}
        {{- end }}
        {{ if $.Values.debugMode }}- --debug{{ end }}
        {{- end }}
        {{- with .resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
        - name: "DB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.psql.password.secret" $ }}
              key: {{ template "rasa-x.psql.password.key" $ }}
        - name: "DB_DATABASE"
          value: {{ .trackerDatabase }}
        - name: "RASA_X_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" $ }}
              key: "rasaXToken"
        - name: "RASA_TOKEN"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" $ }}
              key: "rasaToken"
        - name: "RASA_X_USERNAME"
          value: "{{ $.Values.rasax.initialUser.username }}"
        - name: "RASA_X_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" $ }}
              key: "initialPassword"
        - name: "RABBITMQ_QUEUE"
          value: "{{ $.Values.rasa.rabbitQueue }}"
        - name: "JWT_SECRET"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.secret" $ }}
              key: "jwtSecret"
        {{- if $.Values.redis.install }}
        - name: "REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.redis.password.secret" $ }}
              key: {{ template "rasa-x.redis.password.key" $ }}
        {{- end }}
        - name: "RABBITMQ_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ template "rasa-x.rabbitmq.password.secret" $ }}
              key: {{ template "rasa-x.rabbitmq.password.key" $ }}
        - name: "RABBITMQ_QUEUE"
          value: "{{ $.Values.rasa.rabbitQueue }}"
        - name: "RASA_ENVIRONMENT"
          value: "{{ .rasaEnvironment }}"
        - name: "RASA_MODEL_SERVER"
          value: "http://{{ include "rasa-x.host" $ }}:{{ $.Values.rasax.port }}/api/projects/default/models/tags/{{ .modelTag }}"
        - name: "RASA_DUCKLING_HTTP_URL"
          value: "http://{{ include "duckling.host" $ }}:{{ $.Values.duckling.port }}"
        {{- include "rasa.extra.envs" $ | nindent 8 }}
# this is needed to make it clear that these are two resources
---

{{- end }}
